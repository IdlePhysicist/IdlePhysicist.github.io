<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on IdlePhysicist</title>
    <link>https://eoghan.speleo.dev/programming/</link>
    <description>Recent content in Programming on IdlePhysicist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ie</language>
    <copyright>Â© 2020 Eoghan - [GitHub](https://github.com/IdlePhysicist) - [GitLab](https://gitlab.com/IdlePhysicist) - [RSS](index.xml)</copyright>
    <lastBuildDate>Sun, 10 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://eoghan.speleo.dev/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cave Logger</title>
      <link>https://eoghan.speleo.dev/programming/cave-logger/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/cave-logger/</guid>
      <description>Background I used to keep track of what caves I have visited (and who I go with) using an Excel Workbook. I decided (in 2017) to write a program to do this for me because why not ?!
Come 2019, I started to use Go at work, and I finally go around to looking at this project again.
 A screen shot of cave-logger v1.2.1
  Functionality The app is fairly basic, it gives the user the ability to create, update and delete entries for trips, cavers, and caves.</description>
    </item>
    
    <item>
      <title>Go-LaTeX</title>
      <link>https://eoghan.speleo.dev/programming/go-latex/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/go-latex/</guid>
      <description>I had an idea to use some Unicode characters in my Go projects, particularly ones that are physics or calculation based projects. But I personally did not want to have to either copy and paste the unicode characters or have to manually type in the unicodes for the various characters.
So I devised a solution, which was to write a simple parser that would regex out LaTeX commands for Greek letters and insert the correct character from a map stored within the application binary.</description>
    </item>
    
    <item>
      <title>PDF Split</title>
      <link>https://eoghan.speleo.dev/programming/pdfsplit/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/pdfsplit/</guid>
      <description>I saw someone painstakingly exporting pages of a large PDF document manually to get smaller individual PDFs, containing ranges of pages from the parent document. I thought &amp;ldquo;Hey I could definitely make that easier!&amp;rdquo;, so I sat down for a couple of hours and wrote a very short script to act as a middleman between the user and GhostScript.</description>
    </item>
    
    <item>
      <title>CSV2JSON</title>
      <link>https://eoghan.speleo.dev/programming/csv2json/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/csv2json/</guid>
      <description>Caution This is another quickly thrown together project that may have unintended results, and a perhaps more reliable program could be put together in Python in half the lines &amp;amp; a quarter the time. But it was to be a learning experience!
In work a couple of weeks ago I came upon a task that I thought could be made easier by having a JSON file to parse instead of a csv file, and I had a hankering to write some Go after been stuck on Python projects for months.</description>
    </item>
    
    <item>
      <title>Fuelometer</title>
      <link>https://eoghan.speleo.dev/programming/fuelometer/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/fuelometer/</guid>
      <description>I wanted to keep track of my fuel consumption so I wrote a little app to do it. It&amp;rsquo;s my first GUI application, using PyQt5. I store the data in a SQLite database.
Note there are three branches of the code, this is only a prototype there will be bugs &amp;amp; the numbers may be invalid!
  </description>
    </item>
    
    <item>
      <title>Coffee Socket</title>
      <link>https://eoghan.speleo.dev/programming/coffee-socket/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/coffee-socket/</guid>
      <description>Coffee Socket is an idea I had a number of years ago, when I was frequenting coffee shops in Dublin and inevitably needed to charge my laptop. The concept was for a website (initially) that would have an embedded map with pins for each coffee shop / tea room in Dublin. &amp;ldquo;Nothing interesting here&amp;rdquo; you&amp;rsquo;re thinking to yourself, well the cool bit was that by clicking on each pin you would be told the number of seats &amp;amp; power sockets per floor, as well as the ratio of seats to sockets.</description>
    </item>
    
  </channel>
</rss>
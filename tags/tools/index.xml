<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on IdlePhysicist</title>
    <link>https://eoghan.speleo.dev/tags/tools/</link>
    <description>Recent content in Tools on IdlePhysicist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ie</language>
    <copyright>Â© 2020 Eoghan - [GitHub](https://github.com/IdlePhysicist) - [GitLab](https://gitlab.com/IdlePhysicist)</copyright>
    <lastBuildDate>Thu, 03 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://eoghan.speleo.dev/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go-LaTeX</title>
      <link>https://eoghan.speleo.dev/programming/2019-10-03-go-latex/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/2019-10-03-go-latex/</guid>
      <description>go-latex Repo
I had an idea to use some Unicode characters in my Go projects, particularly ones that are physics or calculation based projects. But I personally did not want to have to either copy and paste the unicode characters or have to manually type in the unicodes for the various characters.
So I devised a solution, which was to write a simple parser that would regex out LaTeX commands for Greek letters and insert the correct character from a map stored within the application binary.</description>
    </item>
    
    <item>
      <title>PDF Split</title>
      <link>https://eoghan.speleo.dev/programming/2019-03-02-pdfsplit/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/2019-03-02-pdfsplit/</guid>
      <description>PDF Split Repo
I saw someone painstakingly exporting pages of a large PDF document manually to get smaller individual PDFs, containing ranges of pages from the parent document. I thought &amp;ldquo;Hey I could definitely make that easier!&amp;quot;, so I sat down for a couple of hours and wrote a very short script to act as a middleman between the user and GhostScript.</description>
    </item>
    
    <item>
      <title>CSV2JSON</title>
      <link>https://eoghan.speleo.dev/programming/2019-02-28-csv2json/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://eoghan.speleo.dev/programming/2019-02-28-csv2json/</guid>
      <description>csv2json Repo
Caution This is another quickly thrown together project that may have unintended results, and a perhaps more reliable program could be put together in Python in half the lines &amp;amp; a quarter the time. But it was to be a learning experience!
In work a couple of weeks ago I came upon a task that I thought could be made easier by having a JSON file to parse instead of a csv file, and I had a hankering to write some Go after been stuck on Python projects for months.</description>
    </item>
    
  </channel>
</rss>